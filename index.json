[{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it.","date":"2020-03-06","objectID":"/second/","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it. ","date":"2020-03-06","objectID":"/second/:0:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.62.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition, this theme only supports Hugo versions above 0.62.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/second/:1:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/second/:2:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/second/:2:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2.2 Install the Theme The LoveIt theme’s repository is: https://github.com/dillonzq/LoveIt. You can download the latest release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2020-03-06","objectID":"/second/:2:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the LoveIt theme: baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/second/:2:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Note By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/second/:2:4","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/second/:2:5","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Tip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/second/:2:6","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/second/:3:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration : baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = false # default amount of posts in each pages paginate = 12 # google analytics code [UA-XXXXXXXX-X] googleAnalytics = \"\" # copyright description used only for seo schema copyright = \"\" # whether to use robots.txt enableRobotsTXT = true # whether to use git commit log enableGitInfo = true # whether to use emoji code enableEmoji = true # ignore some build errors ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [params] # site default theme [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website title for Open Graph and Twitter Cards title = \"My cool site\" # website description for RSS, SEO, Open Graph and Twitter Cards description = \"This is my cool site\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # Header config [params.header] # desktop header mode [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # mobile header mode [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"My cool site\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use","date":"2020-03-06","objectID":"/second/:3:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/second/:3:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"3.3 Style Customization Note Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/second/:3:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language Switch ","date":"2020-03-06","objectID":"/second/:4:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en Simplified Chinese zh-cn zh-CN Traditional Chinese zh-tw zh-TW French fr fr Polish pl pl Brazilian Portuguese pt-br pt-BR Italian it it Spanish es es German de de German de de Serbian sr sr Russian ru ru Romanian ro ro Vietnamese vi vi Arabic ar ar Catalan ca ca Thai th th Telugu te te Indonesian id id Turkish tr tr Korean ko ko Hindi hi hi ","date":"2020-03-06","objectID":"/second/:4:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # determines default content language [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" [[languages.en.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[languages.en.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" languageCode = \"zh-CN\" languageName = \"简体中文\" hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" [[languages.fr.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" [[languages.fr.menu.main]] weight = 3 identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/second/:4:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/LoveIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/second/:4:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme. ","date":"2020-03-06","objectID":"/second/:5:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/second/:5:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine [\"lunr\", \"algolia\"] type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. The official Algolia CLI is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/second/:5:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/second/"},{"categories":null,"content":"Test Test tor this site Hi this is tested site ","date":"2022-09-14","objectID":"/first_post/:0:1","tags":null,"title":"Family budget","uri":"/first_post/"},{"categories":null,"content":"New ID ","date":"2022-09-14","objectID":"/first_post/:1:0","tags":null,"title":"Family budget","uri":"/first_post/"},{"categories":null,"content":"JUST UPDATE ","date":"2022-09-14","objectID":"/first_post/:2:0","tags":null,"title":"Family budget","uri":"/first_post/"},{"categories":null,"content":"Test Tekst Hi this is tested site ","date":"2022-09-14","objectID":"/about/:0:1","tags":null,"title":"Services","uri":"/about/"},{"categories":null,"content":"About ","date":"2022-09-14","objectID":"/about/:1:0","tags":null,"title":"Services","uri":"/about/"}]